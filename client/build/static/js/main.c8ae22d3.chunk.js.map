{"version":3,"sources":["context/AuthContext.js","components/layout/Button/Button.js","components/auth/Logout/Logout.js","components/layout/Navbar/NavbarElements.js","assets/images/buzzra-bee-no-bg.png","components/layout/Navbar/Navbar.js","components/auth/Login/Login.js","components/auth/Register/Register.js","components/pages/LandingPage/LandingPage.js","components/pages/About/About.js","components/pages/MyJobs/MyJobs.js","components/pages/AdvertiseJobs/AdvertiseJobs.js","components/layout/Modal/Modal.js","components/pages/JobSearchResult/FilteredJobItems/FilteredJobItems.js","components/pages/JobSearchResult/JobSearchResult.js","util/firebase.js","components/pages/Profile/Profile.js","Router.js","components/auth/ForgottenPassword/ForgottenPassword.js","components/pages/ApplicationForm/ApplicationForm.js","App.js","index.js","components/pages/JobSearchResult/FilteredJobItems/FilteredJobItems.module.scss","components/auth/Register/Register.module.scss","components/pages/MyJobs/MyJobs.module.scss","components/auth/Login/Login.module.scss","components/pages/JobSearchResult/JobSearchResult.module.scss","components/layout/Modal/Modal.module.scss","components/pages/LandingPage/LandingPage.module.scss","components/pages/About/About.module.scss","components/pages/AdvertiseJobs/AdvertiseJobs.module.scss","components/pages/Profile/Profile.module.scss"],"names":["AuthContext","createContext","AuthContextProvider","props","useState","globalResponseStatus","setGlobalResponseStatus","undefined","loggedIn","setLoggedIn","loggedInUser","setLoggedInUser","allJobs","setAllJobs","filteredJobs","setFilteredJobs","recentJobs","setRecentJobs","recentJobsCount","setRecentJobsCount","isProfileSetUp","selectedJob","setSelectedJob","userJobApplications","setUserJobApplications","myJobs","setMyJobs","userDetails","setUserDetails","modalIsVisible","setModalIsVisible","getJobApplications","email","a","axios","get","jobApplicationsByEmailResponse","data","getAdvertisedAndAppliedToJobs","jobsByReferenceResponse","getLoggedIn","loggedInResponse","getUserDetails","userDetailsResponse","getAllJobs","allJobsResponse","getFilteredJobs","location","title","filteredJobsResponse","dateFormatter","date","split","replace","getRecentJobs","length","useEffect","Provider","value","fetchFilteredJobs","daysPostedCalculator","jobDate","formattedJobPostedDate","todaysDate","Date","toISOString","date1","date2","diffTime","Math","abs","ceil","showModal","hideModal","children","Button","onClick","className","class","type","Logout","useContext","history","useHistory","logout","push","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","Navbar","to","src","logo","alt","activeStyle","Login","setEmail","emailIsValid","setEmailIsValid","password","setPassword","passwordIsValid","setPasswordIsValid","statusMessage","setStatusMessage","isStatusSuccessful","setIsStatusSuccessful","formIsValid","setFormIsValid","setJoinButtonText","e","preventDefault","loginData","post","response","errorMessage","identifier","setTimeout","includes","trim","clearTimeout","classes","onSubmit","control","invalid","htmlFor","id","placeholder","onChange","target","onBlur","Register","verifyPassword","setVerifyPassword","verifyPasswordIsValid","setVerifyPasswordIsValid","register","registerData","LandingPage","setLocation","setTitle","About","MyJobs","refreshMyJobsHandler","deleteJobHandler","jobId","delete","console","log","map","job","index","advertiserEmail","applied","company","icon","salary","jobApplications","tags","tag","_id","AdvertiseJobs","setCompany","description","setDescription","setSalary","hours","setHours","setTags","advertiseJobHandler","jobData","Backdrop","backdrop","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","JobItem","isFilteredJobsResultEmpty","setIsFilteredJobsResultEmpty","isRecentJobsResultEmpty","setIsRecentJobsResultEmpty","isLoading","setIsLoading","generateSetUpProfile","profileArray","profileArrayJobReference","jobReference","then","catch","err","applyNowHandler","userProfile","profile","applicant","onOpenApplicationFormModal","onClose","bind","JobSearchResult","autoUpdateEnabled","setAutoUpdateEnabled","interval","setInterval","FilteredJobItems","onClickApply","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Profile","nickname","setNickname","cv","setCv","coverLetter","setCoverLetter","urls","setUrls","uploadStatusMessage","setUploadStatusMessage","isUploadStatusSuccessful","setIsUploadStatusSuccessful","cvChangeHandler","file","files","uuid","cvFilesRef","storage","ref","child","put","getDownloadURL","url","submitProfilePatchHandler","name","accept","Router","exact","path","onClickForgotPassword","onOpenForgotPasswordModal","ForgottenPassword","ApplicationForm","submitJobApplicationHandler","applicationFormData","onCloseApplicationFormModal","defaults","withCredentials","App","forgottenPasswordIsShown","setForgottenPasswordIsShown","applicationFormIsShwon","setApplicationFormIsShwon","onCloseForgotPasswordModal","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.c8ae22d3.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect, createContext } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthContextProvider = (props) => {\r\n  const [globalResponseStatus, setGlobalResponseStatus] = useState();\r\n\r\n  const [loggedIn, setLoggedIn] = useState(undefined);\r\n  const [loggedInUser, setLoggedInUser] = useState(undefined);\r\n\r\n  const [allJobs, setAllJobs] = useState(undefined);\r\n  const [filteredJobs, setFilteredJobs] = useState(undefined);\r\n\r\n  const [recentJobs, setRecentJobs] = useState(null);\r\n  const [recentJobsCount, setRecentJobsCount] = useState(null);\r\n\r\n  const [isProfileSetUp, setIsProfileSetUp] = useState(false);\r\n\r\n  const [selectedJob, setSelectedJob] = useState(null);\r\n\r\n  const [userJobApplications, setUserJobApplications] = useState([]);\r\n  const [myJobs, setMyJobs] = useState([]);\r\n\r\n  const [userDetails, setUserDetails] = useState([]);\r\n\r\n  // modal\r\n  const [modalIsVisible, setModalIsVisible] = useState(false);\r\n\r\n  // methods\r\n\r\n  // methods starting from here work together\r\n  const getJobApplications = async (email) => {\r\n    const jobApplicationsByEmailResponse = await axios.get(\r\n      // `http://localhost:5000/job-application/${email}`\r\n      `https://job-search-context.herokuapp.com/job-application/${email}`\r\n    );\r\n    setUserJobApplications(jobApplicationsByEmailResponse.data);\r\n  };\r\n\r\n  const getAdvertisedAndAppliedToJobs = async (email) => {\r\n    if (email) {\r\n      const jobsByReferenceResponse = await axios.get(\r\n        // `http://localhost:5000/jobs/jobs-applied-and-advertised/${email}`\r\n        `https://job-search-context.herokuapp.com/jobs/jobs-applied-and-advertised/${email}`\r\n      );\r\n      setMyJobs(jobsByReferenceResponse.data);\r\n    }\r\n  };\r\n  // methods working together ends here\r\n\r\n  const showModal = () => {\r\n    setModalIsVisible(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setModalIsVisible(false);\r\n  };\r\n\r\n  const getLoggedIn = async () => {\r\n    const loggedInResponse = await axios.get(\r\n      // \"http://localhost:5000/authenticate/loggedIn\"\r\n      \"https://job-search-context.herokuapp.com/authenticate/loggedIn\"\r\n    );\r\n    setLoggedIn(loggedInResponse.data.loggedIn);\r\n    setLoggedInUser(loggedInResponse.data.loggedInUser);\r\n    getUserDetails(loggedInUser);\r\n  };\r\n\r\n  const getUserDetails = async (email) => {\r\n    if (email) {\r\n      const userDetailsResponse = await axios.get(\r\n        // `http://localhost:5000/authenticate/user-details/${email}`\r\n        `https://job-search-context.herokuapp.com/authenticate/user-details/${email}`\r\n      );\r\n      setUserDetails(userDetailsResponse.data);\r\n    }\r\n  };\r\n\r\n  const getAllJobs = async () => {\r\n    // const allJobsResponse = await axios.get(\"http://localhost:5000/jobs\");\r\n    const allJobsResponse = await axios.get(\"https://job-search-context.herokuapp.com/jobs\");\r\n    setAllJobs(allJobsResponse.data);\r\n  };\r\n\r\n  const getFilteredJobs = async (location, title) => {\r\n    const filteredJobsResponse = await axios.get(\r\n      // `http://localhost:5000/jobs/filter/${location}/${title}`\r\n      `https://job-search-context.herokuapp.com/jobs/filter/${location}/${title}`\r\n    );\r\n    setFilteredJobs(filteredJobsResponse.data);\r\n  };\r\n\r\n  const fetchFilteredJobs = (location, title) => {\r\n    if (!location && !title) {\r\n      // return nothing for better user experience, these strings will be searched on back end but will not match anything\r\n      // could be any string combination that is logical in not returning anything\r\n      getFilteredJobs(\"returnNothing\", \"returnNothing\");\r\n    } else if (!location) {\r\n      getFilteredJobs(\"none\", title);\r\n    } else if (!title) {\r\n      getFilteredJobs(location, \"none\");\r\n    } else {\r\n      getFilteredJobs(location, title);\r\n    }\r\n  };\r\n\r\n  const dateFormatter = (date) => {\r\n    return date.split(\"T\")[0].replace(/-/g, \"/\");\r\n  };\r\n\r\n  const daysPostedCalculator = (jobDate) => {\r\n    const formattedJobPostedDate = dateFormatter(jobDate);\r\n    const todaysDate = dateFormatter(new Date().toISOString());\r\n\r\n    const date1 = new Date(formattedJobPostedDate);\r\n    const date2 = new Date(todaysDate);\r\n    const diffTime = Math.abs(date1 - date2);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    return diffDays;\r\n  };\r\n\r\n  const getRecentJobs = async () => {\r\n    const recentJobs = await axios.get(\r\n      // \"http://localhost:5000/jobs/recent-jobs/recent\"\r\n      \"https://job-search-context.herokuapp.com/jobs/recent-jobs/recent\"\r\n    );\r\n    setRecentJobs(recentJobs.data);\r\n    setRecentJobsCount(recentJobs.data.length);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLoggedIn();\r\n    if (loggedInUser) {\r\n      getAdvertisedAndAppliedToJobs(loggedInUser);\r\n    }\r\n  }, [loggedInUser]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        loggedIn,\r\n        loggedInUser,\r\n        getLoggedIn,\r\n        allJobs,\r\n        getAllJobs,\r\n        filteredJobs,\r\n        getFilteredJobs,\r\n        fetchFilteredJobs,\r\n        daysPostedCalculator,\r\n        getRecentJobs,\r\n        recentJobs,\r\n        recentJobsCount,\r\n        isProfileSetUp,\r\n        selectedJob,\r\n        setSelectedJob,\r\n        getJobApplications,\r\n        userJobApplications,\r\n        getAdvertisedAndAppliedToJobs,\r\n        myJobs,\r\n        globalResponseStatus,\r\n        setGlobalResponseStatus,\r\n        getUserDetails,\r\n        userDetails,\r\n        showModal,\r\n        hideModal,\r\n        modalIsVisible,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthContext;\r\nexport { AuthContextProvider };\r\n","import React from \"react\";\r\nimport classes from \"./Button.scss\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button onClick={props.onClick} className={props.class} type={props.type}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import axios from \"axios\";\r\nimport React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../../context/AuthContext\";\r\n\r\nconst Logout = (props) => {\r\n  const { getLoggedIn } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const logout = async () => {\r\n    // await axios.get(\"http://localhost:5000/authenticate/logout\");\r\n    await axios.get(\"https://job-search-context.herokuapp.com/authenticate/logout\");\r\n    await getLoggedIn();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return <button className={props.class} onClick={logout}>Logout</button>;\r\n};\r\n\r\nexport default Logout;\r\n","import styled from \"styled-components\"\r\nimport { NavLink as Link } from \"react-router-dom\";\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport \"../../../assets/variables.scss\";\r\n\r\nexport const Nav = styled.nav`\r\n  background: white;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.5rem calc((100vw - 1000px) / 2);\r\n  z-index: 10;\r\n`\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: slategray;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  height: 100%;\r\n  cursor: pointer;\r\n\r\n  &.active {\r\n    color: black;\r\n  }\r\n`\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: black;\r\n  \r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`","export default __webpack_public_path__ + \"static/media/buzzra-bee-no-bg.ded345ad.png\";","import React, { useContext } from \"react\";\r\nimport Logout from \"../../auth/Logout/Logout\";\r\nimport AuthContext from \"../../../context/AuthContext\";\r\nimport Button from \"../Button/Button\";\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink,\r\n} from \"./NavbarElements\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport logo from \"../../../assets/images/buzzra-bee-no-bg.png\";\r\n\r\n// this component uses styled components unlike the rest of the app\r\nconst Navbar = () => {\r\n  const { loggedIn } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <NavLink to=\"/\">\r\n          <h1 className=\"logo-underline\">\r\n            <img\r\n              src={logo}\r\n              alt=\"Buzzra.\"\r\n            />\r\n          </h1>\r\n        </NavLink>\r\n        <Bars />\r\n        <NavMenu>\r\n          {loggedIn === false && (\r\n            <>\r\n              {/* <NavLink to=\"/preview\" activeStyle>\r\n                Preview\r\n              </NavLink> */}\r\n              <NavLink to=\"/register\" activeStyle>\r\n                Register\r\n              </NavLink>\r\n            </>\r\n          )}\r\n\r\n          {loggedIn === true && (\r\n            <>\r\n              <NavLink to=\"/search-jobs\" activeStyle>\r\n                Search Jobs\r\n              </NavLink>\r\n              <NavLink to=\"/advertise-jobs\" activeStyle>\r\n                Advertise Jobs\r\n              </NavLink>\r\n              <NavLink to=\"/my-jobs\" activeStyle>\r\n                My Jobs\r\n              </NavLink>\r\n              <NavLink to=\"/profile\" activeStyle>\r\n                Profile\r\n              </NavLink>\r\n            </>\r\n          )}\r\n        </NavMenu>\r\n        {loggedIn === true && (\r\n          <>\r\n            <NavBtn>\r\n              <Logout class=\"mini\" />\r\n            </NavBtn>\r\n          </>\r\n        )}\r\n\r\n        {loggedIn === false && (\r\n          <>\r\n            <NavBtn>\r\n              <Button class=\"mini\" onClick={() => history.push(\"/login\")}>\r\n                Login\r\n              </Button>\r\n            </NavBtn>\r\n          </>\r\n        )}\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport AuthContext from \"../../../context/AuthContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport classes from \"./Login.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../../layout/Button/Button\";\r\nimport Navbar from \"../../layout/Navbar/Navbar\";\r\n\r\nconst Login = (props) => {\r\n  // variables\r\n  const history = useHistory();\r\n\r\n  // context\r\n  const { showModal } = useContext(AuthContext);\r\n\r\n  // states\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailIsValid, setEmailIsValid] = useState();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordIsValid, setPasswordIsValid] = useState();\r\n\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n  const [isStatusSuccessful, setIsStatusSuccessful] = useState(false);\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const [joinButtonText, setJoinButtonText] = useState(\r\n    \"Checking form validity\"\r\n  );\r\n\r\n  const { getLoggedIn } = useContext(AuthContext);\r\n\r\n  // methods\r\n  const emailChangeHandler = (e) => {\r\n    setEmail(e.target.value);\r\n    setEmailIsValid(e.target.value.includes(\"@\") && password.trim().length > 6);\r\n  };\r\n\r\n  const passwordChangeHandler = (e) => {\r\n    setPassword(e.target.value);\r\n    setPasswordIsValid(email.includes(\"@\") && e.target.value.trim().length > 6);\r\n  };\r\n\r\n  const validateEmailHandler = () => {\r\n    setEmailIsValid(email.includes(\"@\") && email.trim().length > 6);\r\n  };\r\n\r\n  const validatePasswordHandler = () => {\r\n    setPasswordIsValid(password.trim().length > 6);\r\n  };\r\n\r\n  async function login(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const loginData = {\r\n        email,\r\n        password,\r\n      };\r\n\r\n      // await axios.post(\"http://localhost:5000/authenticate/login\", loginData);\r\n      await axios.post(\"https://job-search-context.herokuapp.com/authenticate/login\", loginData);\r\n      getLoggedIn();\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setStatusMessage(error.response.data.errorMessage);\r\n      setIsStatusSuccessful(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const identifier = setTimeout(() => {\r\n      // console.log(\"Checking form validity\");\r\n      setFormIsValid(\r\n        email.includes(\"@\") && email.trim().length > 6 && password.length > 6\r\n      );\r\n      if (formIsValid) {\r\n        setJoinButtonText(\"Join\");\r\n      } else {\r\n        setJoinButtonText(\"Please correct highlighted fields\");\r\n      }\r\n    }, 500);\r\n\r\n    return () => {\r\n      // console.log(\"Clean up\");\r\n      setJoinButtonText(\"Checking form validity\");\r\n      clearTimeout(identifier);\r\n    };\r\n  }, [email, formIsValid, password]);\r\n\r\n  return (\r\n    <>\r\n      {/* <Navbar /> */}\r\n      <div className=\"flex-box-container\">\r\n        <div className={classes[\"login-container\"]}>\r\n          <div className=\"form-container login\">\r\n            <div className=\"titles-container\">\r\n              <h1>Login</h1>\r\n              <p>\r\n                Don't have an account? <Link to=\"/register\">Register</Link>\r\n              </p>\r\n            </div>\r\n            <form onSubmit={(e) => e.preventDefault()}>\r\n              <div\r\n                className={`${classes.control} ${\r\n                  emailIsValid === false ? classes.invalid : \"\"\r\n                }`}\r\n              >\r\n                <label htmlFor=\"email\">Email Address</label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={emailChangeHandler}\r\n                  onBlur={validateEmailHandler}\r\n                  value={email}\r\n                />\r\n              </div>\r\n              <br />\r\n              <div\r\n                className={`${classes.control} ${\r\n                  passwordIsValid === false ? classes.invalid : \"\"\r\n                }`}\r\n              >\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={passwordChangeHandler}\r\n                  onBlur={validatePasswordHandler}\r\n                  value={password}\r\n                />\r\n              </div>\r\n              <br />\r\n              <Button\r\n                type=\"submit\"\r\n                class={!formIsValid ? \"disabled\" : null}\r\n                onClick={login}\r\n              >\r\n                Login\r\n              </Button>\r\n              <br />\r\n              {/* <Button class=\"google-register-button\">\r\n                <img\r\n                  width=\"28px\"\r\n                  src=\"https://img.icons8.com/color-glass/48/000000/google-logo.png\"\r\n                  alt=\"GI |\"\r\n                />{\" \"}\r\n                Login with Google\r\n              </Button>\r\n              <br />\r\n              <Button class=\"secondary\" onClick={showModal}>\r\n                Forgotten Password? Reset Here\r\n              </Button>\r\n              <br /> */}\r\n\r\n              <div className=\"status-message-container\">\r\n                {isStatusSuccessful === false && statusMessage && (\r\n                  <p className=\"status-message error\">{statusMessage}</p>\r\n                )}\r\n                {isStatusSuccessful === true && statusMessage && (\r\n                  <p className=\"status-message success\">{statusMessage}</p>\r\n                )}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n// import AuthContext from \"../../../context/AuthContext\";\r\nimport classes from \"./Register.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../../layout/Button/Button\";\r\nimport { useHistory } from \"react-router\";\r\nimport { CgProfile as ProfileIcon } from \"react-icons/cg\";\r\nimport { HiSwitchHorizontal as SwitchIcon } from \"react-icons/hi\";\r\nimport { AiOutlineForm as FormFillIcon } from \"react-icons/ai\";\r\nimport { FaUmbrellaBeach as RelaxIcon } from \"react-icons/fa\";\r\n\r\n// reducer methods\r\n// const emailReducer = () => {};\r\n\r\nconst Register = () => {\r\n  // variables\r\n  const history = useHistory();\r\n\r\n  // states\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailIsValid, setEmailIsValid] = useState();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordIsValid, setPasswordIsValid] = useState();\r\n\r\n  const [verifyPassword, setVerifyPassword] = useState(\"\");\r\n  const [verifyPasswordIsValid, setVerifyPasswordIsValid] = useState(\"\");\r\n\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n  const [isStatusSuccessful, setIsStatusSuccessful] = useState(\"\");\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  // methods\r\n  const emailChangeHandler = (e) => {\r\n    setEmail(e.target.value);\r\n    setEmailIsValid(e.target.value.includes(\"@\") && password.trim().length > 6);\r\n  };\r\n\r\n  const passwordChangeHandler = (e) => {\r\n    setPassword(e.target.value);\r\n    setPasswordIsValid(email.includes(\"@\") && e.target.value.trim().length > 6);\r\n  };\r\n\r\n  const verifyPasswordChangeHandler = (e) => {\r\n    setVerifyPassword(e.target.value);\r\n    setVerifyPasswordIsValid(\r\n      email.includes(\"@\") && e.target.value.trim().length > 6\r\n    );\r\n  };\r\n\r\n  const validateEmailHandler = () => {\r\n    setEmailIsValid(email.includes(\"@\") && email.trim().length > 6);\r\n  };\r\n\r\n  const validatePasswordHandler = () => {\r\n    setPasswordIsValid(password.trim().length > 6);\r\n  };\r\n\r\n  const validateVerifyPasswordHandler = () => {\r\n    setVerifyPasswordIsValid(verifyPassword.trim().length > 6);\r\n  };\r\n\r\n  const register = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const registerData = {\r\n        email,\r\n        password,\r\n        verifyPassword,\r\n      };\r\n\r\n      await axios.post(\r\n        // \"http://localhost:5000/authenticate/register\",\r\n        \"https://job-search-context.herokuapp.com/authenticate/register\",\r\n        registerData\r\n      );\r\n      // commented out as user should be redirected to login page rather than be logged in\r\n      // getLoggedIn();\r\n      history.push(\"/login\");\r\n    } catch (error) {\r\n      setIsStatusSuccessful(false);\r\n      setStatusMessage(error.response.data.errorMessage);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const identifier = setTimeout(() => {\r\n      // console.log(\"Checking form validity\");\r\n      setFormIsValid(\r\n        email.includes(\"@\") &&\r\n          email.trim().length > 6 &&\r\n          password.length > 6 &&\r\n          verifyPassword.length > 6\r\n      );\r\n      if (formIsValid) {\r\n        // setJoinButtonText(\"Join\");\r\n      } else {\r\n        // setJoinButtonText(\"Please correct highlighted fields\");\r\n      }\r\n    }, 500);\r\n\r\n    return () => {\r\n      // console.log(\"Clean up\");\r\n      // setJoinButtonText(\"Checking form validity\");\r\n      clearTimeout(identifier);\r\n    };\r\n  }, [email, formIsValid, password, verifyPassword]);\r\n\r\n  return (\r\n    <div className=\"flex-box-container\">\r\n      <div className={classes[\"register-container\"]}>\r\n        <div className=\"form-container\">\r\n          <div className=\"titles-container\">\r\n            <h1>Register</h1>\r\n            <p>\r\n              Already have an account? <Link to=\"/login\">Login</Link>\r\n            </p>\r\n          </div>\r\n\r\n          {/* <div className=\"google-register-container\">\r\n            <Button class=\"google-register-button\">\r\n              <img\r\n                width=\"28px\"\r\n                src=\"https://img.icons8.com/color-glass/48/000000/google-logo.png\"\r\n                alt=\"GI |\"\r\n              />{\" \"}\r\n              Sign up with Google\r\n            </Button>\r\n\r\n            <p>or</p>\r\n          </div> */}\r\n          <form onSubmit={(e) => e.preventDefault()}>\r\n            <div\r\n              className={`${classes.control} ${\r\n                emailIsValid === false ? classes.invalid : \"\"\r\n              }`}\r\n            >\r\n              <label htmlFor=\"email\">Email Address</label>\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                onChange={emailChangeHandler}\r\n                onBlur={validateEmailHandler}\r\n                value={email}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              className={`${classes.control} ${\r\n                passwordIsValid === false ? classes.invalid : \"\"\r\n              }`}\r\n            >\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={passwordChangeHandler}\r\n                onBlur={validatePasswordHandler}\r\n                value={password}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              className={`${classes.control} ${\r\n                verifyPasswordIsValid === false ? classes.invalid : \"\"\r\n              }`}\r\n            >\r\n              {\" \"}\r\n              <label htmlFor=\"verify-password\">Verify Password</label>\r\n              <input\r\n                id=\"verify-password\"\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                onChange={verifyPasswordChangeHandler}\r\n                onBlur={validateVerifyPasswordHandler}\r\n                value={verifyPassword}\r\n              />\r\n            </div>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              class={!formIsValid ? \"disabled\" : null}\r\n              onClick={register}\r\n            >\r\n              Join\r\n            </Button>\r\n\r\n            <div className=\"status-message-container\">\r\n              {isStatusSuccessful === false && statusMessage && <p className=\"status-message error\">{statusMessage}</p>}\r\n              {isStatusSuccessful === true && statusMessage && <p className=\"status-message success\">{statusMessage}</p>}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={classes[\"welcome-message-container\"]}\r\n        id=\"welcomeMessageFlexBox\"\r\n      >\r\n        <div className={classes[\"titles-container\"]}>\r\n          {/* <h1 className={classes[\"logo\"]}>Buzzra.</h1>\r\n          <p>The Best Job Hunting Service</p>\r\n          <br /> */}\r\n          <h1>How it works?</h1><br />\r\n          <div className=\"how-it-works-container\">\r\n            <div>\r\n              <ProfileIcon className=\"icon one\" />\r\n              Join us\r\n            </div>\r\n            <div>\r\n              <SwitchIcon className=\"icon two\" />\r\n              Switch between job-hunter and recruiter\r\n            </div>\r\n            <div>\r\n              <FormFillIcon className=\"icon three\" />\r\n              Fill in quick preferences\r\n            </div>\r\n\r\n            <div>\r\n              <RelaxIcon className=\"icon four\" />\r\n              Sit back, relax and let us find your best job\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, useContext } from \"react\";\r\nimport AuthContext from \"../../../context/AuthContext\";\r\nimport Button from \"../../layout/Button/Button\";\r\nimport classes from \"./LandingPage.module.scss\";\r\nimport { useHistory } from \"react-router\";\r\nimport logo from \"../../../assets/images/buzzra-bee-no-bg.png\";\r\n\r\nconst LandingPage = () => {\r\n  // states\r\n  const [location, setLocation] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  // context\r\n  const { fetchFilteredJobs } = useContext(AuthContext);\r\n  const { getAllJobs } = useContext(AuthContext);\r\n  const { getRecentJobs } = useContext(AuthContext);\r\n\r\n  // methods\r\n  const locationChangeHandler = (e) => {\r\n    setLocation(e.target.value);\r\n  };\r\n\r\n  const titleChangeHandler = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const fetchFilteredJobsNonContext = () => {\r\n    fetchFilteredJobs(location, title);\r\n    getRecentJobs();\r\n    history.push(\"/job-search-result\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex-box-container\">\r\n        <div className={classes[\"landing-page-container\"]}>\r\n          <div>\r\n            <h1>\r\n              Find your dream <br />\r\n              job with{\" \"}\r\n              <span className=\"logo-underline\">\r\n                {\" \"}\r\n                <img src={logo} alt=\"Buzzra.\" />\r\n              </span>\r\n            </h1>\r\n            <p>\r\n              Get your dream job by giving this service,\r\n              <br /> the employers and your self a chance.\r\n            </p>\r\n            <br />\r\n\r\n            <div className={classes[\"job-search-container\"]}>\r\n              <input\r\n                type=\"text\"\r\n                className=\"mini-input no-border-right\"\r\n                placeholder=\"Location\"\r\n                value={location}\r\n                onChange={locationChangeHandler}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"no-border-right no-border-left\"\r\n                placeholder=\"Enter a role name or keyword\"\r\n                value={title}\r\n                onChange={titleChangeHandler}\r\n              />\r\n              <Button\r\n                class=\"mini no-border-left\"\r\n                onClick={fetchFilteredJobsNonContext}\r\n              >\r\n                Explore Now\r\n              </Button>\r\n            </div>\r\n            <br />\r\n            <p>\r\n              <strong>Popular searches this week: </strong> None to be populated\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React, { useContext } from \"react\";\r\nimport AuthContext from \"../../../context/AuthContext\";\r\nimport classes from \"./About.module.scss\";\r\n\r\nconst About = () => {\r\n  const { loggedIn } = useContext(AuthContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex-box-container\">\r\n        <div className={classes[\"about-page-container\"]}>\r\n          {loggedIn === false && (\r\n            <>\r\n              <p>Unauthorised, please login or register</p>\r\n            </>\r\n          )}\r\n          {loggedIn === true && (\r\n            <>\r\n              <p>About page</p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import classes from \"./MyJobs.module.scss\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport AuthContext from \"../../../context/AuthContext\";\r\nimport { MdLocationOn as LocationIcon } from \"react-icons/md\";\r\nimport { FaHotjar as HotIcon, FaPoundSign as SalaryIcon } from \"react-icons/fa\";\r\nimport Button from \"../../layout/Button/Button\";\r\nimport axios from \"axios\";\r\n\r\nconst MyJobs = (props) => {\r\n  // useEffect\r\n  useEffect(() => {\r\n    refreshMyJobsHandler();\r\n  }, []);\r\n\r\n  // context\r\n  const { getJobApplications } = useContext(AuthContext);\r\n  const { userJobApplications } = useContext(AuthContext);\r\n\r\n  const { getAdvertisedAndAppliedToJobs } = useContext(AuthContext);\r\n  const { myJobs } = useContext(AuthContext);\r\n\r\n  const { daysPostedCalculator } = useContext(AuthContext);\r\n  const { setSelectedJob } = useContext(AuthContext);\r\n  const { loggedInUser } = useContext(AuthContext);\r\n\r\n  // methods\r\n  const deleteJobHandler = async (jobId) => {\r\n    try {\r\n      // await axios.delete(`http://localhost:5000/jobs/${jobId}`);\r\n      await axios.delete(`https://job-search-context.herokuapp.com/jobs/${jobId}`);\r\n      refreshMyJobsHandler();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const refreshMyJobsHandler = async () => {\r\n    if (loggedInUser) {\r\n      getAdvertisedAndAppliedToJobs(loggedInUser);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes[\"flex-box-container\"]}>\r\n        <div className={classes[\"my-jobs-container\"]}>\r\n          <h1>\r\n            <strong>My jobs</strong>\r\n          </h1>\r\n          <p>Your jobs applied to or advertised appear here</p>\r\n          <hr />\r\n          {myJobs && myJobs.length < 1 && (\r\n            <>\r\n              <p>\r\n                You have not applied to or advertised any jobs 🦗 <br />\r\n                <span className=\"hot\">\r\n                  If your applied to job does not appear here, it is likely\r\n                  deleted\r\n                </span>\r\n              </p>\r\n              <Button class=\"mini\" onClick={refreshMyJobsHandler}>\r\n                Refresh my jobs\r\n              </Button>{\" \"}\r\n              <br />\r\n              <br />\r\n            </>\r\n          )}\r\n\r\n          {myJobs &&\r\n            myJobs.map((job, index) => (\r\n              <div key={index}>\r\n                <div\r\n                  className={`${classes[\"job-item-container\"]} ${\r\n                    job.advertiserEmail === loggedInUser ? \"\" : classes.applied\r\n                  }`}\r\n                >\r\n                  <div className={classes[\"job-item\"]}>\r\n                    <p>\r\n                      <strong>{job.title}</strong> at\r\n                      <strong> {job.company}</strong>\r\n                      {daysPostedCalculator(job.date) < 1 && (\r\n                        <HotIcon className={classes.icon} />\r\n                      )}\r\n                      <div className={classes[\"salary-location\"]}>\r\n                        <div className={classes.salary}>\r\n                          <SalaryIcon /> | {job.salary},000\r\n                        </div>\r\n                        <div className={classes.location}>\r\n                          <LocationIcon /> | {job.location}\r\n                        </div>\r\n                      </div>\r\n                      {daysPostedCalculator(job.date) < 1 && (\r\n                        <p>\r\n                          {job.advertiserEmail === loggedInUser\r\n                            ? \"Advertised\"\r\n                            : \"Applied to\"}{\" \"}\r\n                          by you{\" \"}\r\n                          {daysPostedCalculator(job.date) < 1\r\n                            ? \"today\"\r\n                            : \"day(s) ago\"}{\" \"}\r\n                          |{\" \"}\r\n                          <span class=\"hot\">\r\n                            {job.jobApplications.length} applicant(s)\r\n                          </span>\r\n                        </p>\r\n                      )}\r\n                      {daysPostedCalculator(job.date) > 0 && (\r\n                        <p>\r\n                          {job.advertiserEmail === loggedInUser\r\n                            ? \"Advertised\"\r\n                            : \"Applied to\"}{\" \"}\r\n                          by you{\" \"}\r\n                          {daysPostedCalculator(job.date) < 1\r\n                            ? \"today\"\r\n                            : \"day(s) ago\"}{\" \"}\r\n                          |{\" \"}\r\n                          <span className=\"hot\">\r\n                            {job.jobApplications.length} applicant(s)\r\n                          </span>\r\n                        </p>\r\n                      )}\r\n                      <br />\r\n                      {job.tags\r\n                        .trim()\r\n                        .split(\",\")\r\n                        .map((tag, index) => (\r\n                          <div className=\"tags-container\" key={index}>\r\n                            <p className=\"tag-item applied\">{tag}</p>\r\n                          </div>\r\n                        ))}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                {loggedInUser === job?.advertiserEmail && (\r\n                  <>\r\n                    <Button\r\n                      onClick={() => deleteJobHandler(job._id)}\r\n                      class=\"mini danger margin-left apply-now no-transition-transform\"\r\n                    >\r\n                      Delete Job\r\n                    </Button>\r\n                    <br />\r\n                  </>\r\n                )}\r\n                <br />\r\n                <br />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyJobs;\r\n","import React, { useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport AuthContext from \"../../../context/AuthContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport classes from \"./AdvertiseJobs.module.scss\";\r\nimport Button from \"../../layout/Button/Button\";\r\n\r\nconst AdvertiseJobs = (props) => {\r\n  // variables\r\n  const history = useHistory();\r\n\r\n  // context\r\n  const { loggedInUser } = useContext(AuthContext);\r\n  const { getFilteredJobs } = useContext(AuthContext);\r\n  const { getRecentJobs } = useContext(AuthContext);\r\n  const { getAdvertisedAndAppliedToJobs } = useContext(AuthContext);\r\n\r\n  // states\r\n  const [company, setCompany] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [salary, setSalary] = useState();\r\n  const [hours, setHours] = useState();\r\n  const [tags, setTags] = useState();\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n  const [isStatusSuccessful, setIsStatusSuccessful] = useState(false);\r\n\r\n  // methods\r\n  const fetchFilteredJobsNonContext = () => {\r\n    getFilteredJobs(\"all\", \"all\");\r\n    getRecentJobs();\r\n    getAdvertisedAndAppliedToJobs(loggedInUser);\r\n    history.push(\"/job-search-result\");\r\n  };\r\n\r\n  const advertiseJobHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const advertiserEmail = loggedInUser;\r\n      const jobData = {\r\n        company,\r\n        title,\r\n        description,\r\n        location,\r\n        salary,\r\n        hours,\r\n        tags,\r\n        advertiserEmail\r\n      };\r\n\r\n      // await axios.post(\"http://localhost:5000/jobs\", jobData);\r\n      await axios.post(\"https://job-search-context.herokuapp.com/jobs\", jobData);\r\n      fetchFilteredJobsNonContext();\r\n    } catch (error) {\r\n      setStatusMessage(error.response.data.errorMessage);\r\n      setIsStatusSuccessful(false);\r\n\r\n      // update my-jobs\r\n      getAdvertisedAndAppliedToJobs(loggedInUser)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex-box-container\">\r\n        <div className={classes[\"advertise-jobs-container\"]}>\r\n          <div className=\"form-container advertise-job\">\r\n            <div className=\"titles-container\">\r\n              <h1>Advertise a Job</h1>\r\n              <p>Get enough applicants in as little as 2 days</p>\r\n            </div>\r\n            <form onSubmit={(e) => e.preventDefault()}>\r\n              <label htmlFor=\"company\">Company</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"company\"\r\n                placeholder=\"Facebook\"\r\n                value={company}\r\n                onChange={(e) => setCompany(e.target.value)}\r\n              />\r\n\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                placeholder=\"Software Engineer\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"description\"\r\n                placeholder=\"Be apart of the welcoming development team...\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n\r\n              <label htmlFor=\"location\">Location</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"location\"\r\n                placeholder=\"Manchester\"\r\n                value={location}\r\n                onChange={(e) => setLocation(e.target.value)}\r\n              />\r\n\r\n              <label htmlFor=\"salary\">Salary</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"salary\"\r\n                placeholder=\"120\"\r\n                value={salary}\r\n                onChange={(e) => setSalary(e.target.value)}\r\n              />\r\n\r\n              <label htmlFor=\"hours\">Hours</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"hours\"\r\n                placeholder=\"36\"\r\n                value={hours}\r\n                onChange={(e) => setHours(e.target.value)}\r\n              />\r\n\r\n              <label htmlFor=\"tags\">Tags</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"tags\"\r\n                placeholder=\"React, React Native, Node\"\r\n                value={tags}\r\n                onChange={(e) => setTags(e.target.value)}\r\n              />\r\n              <br />\r\n              <Button onClick={advertiseJobHandler}>Publish</Button>\r\n              <div className=\"status-message-container\">\r\n                {isStatusSuccessful === false && statusMessage && (\r\n                  <p className=\"status-message error\">{statusMessage}</p>\r\n                )}\r\n                {isStatusSuccessful === true && statusMessage && (\r\n                  <p className=\"status-message success\">{statusMessage}</p>\r\n                )}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdvertiseJobs;\r\n","import React, { useContext } from \"react\";\r\nimport AuthContext from \"../../../context/AuthContext\";\r\nimport classes from \"./Modal.module.scss\";\r\nimport { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Backdrop = () => {\r\n  const { hideModal, modalIsVisible } = useContext(AuthContext);\r\n\r\n  return (\r\n    <>\r\n      {modalIsVisible && (\r\n        <div className={classes.backdrop} onClick={hideModal} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  // context\r\n  const { modalIsVisible } = useContext(AuthContext);\r\n\r\n  return (\r\n    <>\r\n      {modalIsVisible && (\r\n        <div className={classes.modal}>\r\n          <div className={classes.content}>{props.children}</div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(<Backdrop />, portalElement)}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import classes from \"./FilteredJobItems.module.scss\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport AuthContext from \"../../../../context/AuthContext\";\r\nimport { MdLocationOn as LocationIcon } from \"react-icons/md\";\r\nimport { FaHotjar as HotIcon, FaPoundSign as SalaryIcon } from \"react-icons/fa\";\r\nimport Button from \"../../../layout/Button/Button\";\r\nimport axios from \"axios\";\r\nimport Modal from \"../../../layout/Modal/Modal\";\r\n\r\nconst JobItem = (props) => {\r\n  // state\r\n  const [isFilteredJobsResultEmpty, setIsFilteredJobsResultEmpty] =\r\n    useState(false);\r\n  const [isRecentJobsResultEmpty, setIsRecentJobsResultEmpty] = useState(false);\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n  const [isStatusSuccessful, setIsStatusSuccessful] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // context\r\n  const {\r\n    filteredJobs,\r\n    getFilteredJobs,\r\n    getRecentJobs,\r\n    daysPostedCalculator,\r\n    isProfileSetUp,\r\n    setSelectedJob,\r\n    selectedJob,\r\n    loggedInUser,\r\n    getJobApplications,\r\n    jobApplications,\r\n    recentJobs,\r\n    getUserDetails,\r\n    userDetails,\r\n    showModal,\r\n    hideModal,\r\n    modalIsVisible,\r\n  } = useContext(AuthContext);\r\n\r\n  // effects\r\n  useEffect(() => {\r\n    !filteredJobs || (filteredJobs && filteredJobs.length < 1)\r\n      ? setIsFilteredJobsResultEmpty(true)\r\n      : setIsFilteredJobsResultEmpty(false);\r\n  }, [filteredJobs]);\r\n\r\n  useEffect(() => {\r\n    !recentJobs || (recentJobs && recentJobs.length < 1)\r\n      ? setIsRecentJobsResultEmpty(true)\r\n      : setIsRecentJobsResultEmpty(false);\r\n  }, [recentJobs]);\r\n\r\n  useEffect(() => {\r\n    getUserDetails(loggedInUser);\r\n  }, []);\r\n\r\n  // methods\r\n  const generateSetUpProfile = async (profileArray) => {\r\n    let profileArrayJobReference;\r\n    if (selectedJob) {\r\n      profileArrayJobReference = {\r\n        ...profileArray,\r\n        jobReference: selectedJob._id,\r\n      };\r\n    }\r\n\r\n    setIsLoading(true);\r\n    await axios\r\n      .post(\r\n        // `http://localhost:5000/job-application/${loggedInUser}`,\r\n        `https://job-search-context.herokuapp.com/job-application/${loggedInUser}`,\r\n        profileArrayJobReference\r\n      )\r\n      .then(() => {\r\n        getFilteredJobs(\"all\", \"all\");\r\n        getRecentJobs();\r\n        setIsStatusSuccessful(true);\r\n        showModal();\r\n        setStatusMessage(\r\n          \"Successfully submitted application, jobs have been refreshed\"\r\n        );\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setIsStatusSuccessful(true);\r\n        showModal();\r\n        setIsLoading(false);\r\n        setStatusMessage(`Failed to submit application`);\r\n      });\r\n  };\r\n\r\n  const applyNowHandler = (job) => {\r\n    setSelectedJob(job);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedJob) {\r\n      const userProfile = userDetails.profile[0];\r\n      // if userProfile is valid and there is an applicant property, call the method to use profile\r\n      userProfile && userProfile.applicant\r\n        ? generateSetUpProfile(userDetails.profile[0])\r\n        : props.onOpenApplicationFormModal();\r\n    }\r\n  }, [selectedJob]);\r\n\r\n  const fetchFilteredJobsNonContext = () => {\r\n    getFilteredJobs(\"all\", \"all\");\r\n    getRecentJobs();\r\n  };\r\n\r\n  const deleteJobHandler = async (jobId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/jobs/${jobId}`);\r\n      fetchFilteredJobsNonContext();\r\n    } catch (error) {\r\n      // setStatusMessage(error.response.data.errorMessage);\r\n      // setIsStatusSuccessful(false);\r\n    }\r\n  };\r\n\r\n  const filterAllJobs = () => {\r\n    // this will display all results as back end returns all jobs if all, all are sent as arguments\r\n    getFilteredJobs(\"all\", \"all\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {statusMessage && modalIsVisible && (\r\n        <Modal onClose={hideModal}>\r\n          {\" \"}\r\n          <div className=\"status-message-container\">\r\n            {isStatusSuccessful === true && statusMessage && (\r\n              <p className=\"status-message success\">{statusMessage}</p>\r\n            )}\r\n            {isStatusSuccessful === false && statusMessage && (\r\n              <p className=\"status-message error\">{statusMessage}</p>\r\n            )}\r\n          </div>\r\n          <br />\r\n          <Button onClick={hideModal}>Okay</Button>\r\n        </Modal>\r\n      )}\r\n\r\n      <div className=\"flex-box-container flex-box-container--filtered-jobs\">\r\n        <div className=\"filtered-jobs-container margin-left\">\r\n          <h1>\r\n            <strong>Jobs filtered just for you</strong>\r\n          </h1>\r\n          <p>\r\n            {!isFilteredJobsResultEmpty\r\n              ? filteredJobs && filteredJobs.length\r\n              : \"No\"}{\" \"}\r\n            available job(s)!\r\n          </p>\r\n          <hr />\r\n          {isFilteredJobsResultEmpty && (\r\n            <>\r\n              <p>\r\n                Sorry, no available jobs 🦗, please update your search or\r\n                alternatively:\r\n              </p>\r\n              <Button class=\"mini\" onClick={filterAllJobs}>\r\n                View all jobs\r\n              </Button>\r\n            </>\r\n          )}\r\n          {filteredJobs &&\r\n            filteredJobs.map((job, index) => (\r\n              <div key={index}>\r\n                <div className={classes[\"job-item-container\"]}>\r\n                  <div className={classes[\"job-item\"]}>\r\n                    <p>\r\n                      <strong>{job.company}</strong> is looking for a{\" \"}\r\n                      <strong>{job.title}</strong>\r\n                      {daysPostedCalculator(job.date) < 1 && (\r\n                        <HotIcon className={classes.icon} />\r\n                      )}\r\n                      <div className={classes[\"salary-location\"]}>\r\n                        <div className={classes.salary}>\r\n                          <SalaryIcon /> | {job.salary},000\r\n                        </div>\r\n                        <div className={classes.location}>\r\n                          <LocationIcon /> | {job.location}\r\n                        </div>\r\n                      </div>\r\n                      {daysPostedCalculator(job.date) < 1 && (\r\n                        <p>\r\n                          Recently posted |{\" \"}\r\n                          <span class=\"hot\">\r\n                            {job.jobApplications.length} applicant(s)\r\n                          </span>\r\n                        </p>\r\n                      )}\r\n                      {daysPostedCalculator(job.date) > 0 && (\r\n                        <p>\r\n                          Posted {daysPostedCalculator(job.date)} day(s) ago |{\" \"}\r\n                          <span className=\"hot\">\r\n                            {job.jobApplications.length} applicant(s)\r\n                          </span>\r\n                        </p>\r\n                      )}\r\n                      <br />\r\n                      {job.tags\r\n                        .trim()\r\n                        .split(\",\")\r\n                        .map((tag, index) => (\r\n                          <div className=\"tags-container\" key={index}>\r\n                            <p className=\"tag-item\">{tag}</p>\r\n                          </div>\r\n                        ))}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                {loggedInUser === job?.advertiserEmail && (\r\n                  <Button\r\n                    onClick={() => deleteJobHandler(job._id)}\r\n                    class=\"mini danger margin-left apply-now no-transition-transform\"\r\n                  >\r\n                    Delete Job\r\n                  </Button>\r\n                )}\r\n\r\n                {job?.advertiserEmail !== loggedInUser && (\r\n                  <Button\r\n                    class={\r\n                      \"mini apply-now no-transition-transform\" +\r\n                      (isLoading ? \" is-loading\" : \"\")\r\n                    }\r\n                    onClick={applyNowHandler.bind(this, job)}\r\n                  >\r\n                    {isLoading ? \"Submitting...\" : \"Apply Now\"}\r\n                  </Button>\r\n                )}\r\n\r\n                <br />\r\n                <br />\r\n                <br />\r\n              </div>\r\n            ))}\r\n        </div>\r\n\r\n        <div className=\"recent-jobs-container margin-right\">\r\n          <h1>\r\n            <strong>Recent new jobs</strong>\r\n          </h1>\r\n          <p>\r\n            {!isRecentJobsResultEmpty ? recentJobs && recentJobs.length : \"No\"}{\" \"}\r\n            job(s) added today!\r\n          </p>\r\n          <hr />\r\n          {isRecentJobsResultEmpty && (\r\n            <p>Try enabling auto update recent jobs or refreshing: </p>\r\n          )}\r\n\r\n          {recentJobs &&\r\n            recentJobs.map((job, index) => (\r\n              <div>\r\n                <div key={index}>\r\n                  <div className={classes[\"job-item-container\"]}>\r\n                    <div className={classes[\"job-item\"]}>\r\n                      <p>\r\n                        <strong>{job.company}</strong> is looking for a{\" \"}\r\n                        <strong>{job.title}</strong>\r\n                        {daysPostedCalculator(job.date) < 1 && (\r\n                          <HotIcon className={classes.icon} />\r\n                        )}\r\n                        <div className={classes[\"salary-location\"]}>\r\n                          <div className={classes.salary}>\r\n                            <SalaryIcon /> | {job.salary},000\r\n                          </div>\r\n                          <div className={classes.location}>\r\n                            <LocationIcon /> | {job.location}\r\n                          </div>\r\n                        </div>\r\n                        {daysPostedCalculator(job.date) < 1 && (\r\n                          <p>\r\n                            Recently posted |{\" \"}\r\n                            <span class=\"hot\">\r\n                              {job.jobApplications.length} applicant(s)\r\n                            </span>\r\n                          </p>\r\n                        )}\r\n                        {daysPostedCalculator(job.date) > 0 && (\r\n                          <p>\r\n                            Posted {daysPostedCalculator(job.date)} day(s) ago |{\" \"}\r\n                            <span className=\"hot\">\r\n                              {job.jobApplications.length} applicant(s)\r\n                            </span>\r\n                          </p>\r\n                        )}\r\n                        <br />\r\n                        {job.tags\r\n                          .trim()\r\n                          .split(\",\")\r\n                          .map((tag, index) => (\r\n                            <div className=\"tags-container\" key={index}>\r\n                              <p className=\"tag-item\">{tag}</p>\r\n                            </div>\r\n                          ))}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  {job?.advertiserEmail === loggedInUser && (\r\n                    <Button\r\n                      onClick={() => deleteJobHandler(job._id)}\r\n                      class=\"mini danger  margin-left apply-now no-transition-transform\"\r\n                    >\r\n                      Delete Job\r\n                    </Button>\r\n                  )}\r\n                  {job?.advertiserEmail !== loggedInUser && (\r\n                    <Button\r\n                      class={\r\n                        \"mini apply-now no-transition-transform\" +\r\n                        (isLoading ? \" is-loading\" : \"\")\r\n                      }\r\n                      onClick={applyNowHandler.bind(this, job)}\r\n                    >\r\n                      {isLoading ? \"Submitting...\" : \"Apply Now\"}\r\n                    </Button>\r\n                  )}\r\n\r\n                  <br />\r\n                  <br />\r\n                  <br />\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobItem;\r\n","import classes from \"./JobSearchResult.module.scss\";\r\nimport Button from \"../../layout/Button/Button\";\r\nimport FilteredJobItems from \"./FilteredJobItems/FilteredJobItems\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport AuthContext from \"../../../context/AuthContext\";\r\n\r\nconst JobSearchResult = (props) => {\r\n  // context\r\n  const { fetchFilteredJobs } = useContext(AuthContext);\r\n  const { getRecentJobs } = useContext(AuthContext);\r\n  const { getFilteredJobs } = useContext(AuthContext);\r\n\r\n  // states\r\n  const [location, setLocation] = useState();\r\n  const [title, setTitle] = useState();\r\n  const [autoUpdateEnabled, setAutoUpdateEnabled] = useState(false);\r\n\r\n  // effects\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (autoUpdateEnabled) {\r\n        getRecentJobs();\r\n        getFilteredJobs(\"all\", \"all\");\r\n      }\r\n    }, 5000);\r\n\r\n    return () => {\r\n      clearTimeout(interval);\r\n    };\r\n  }, [autoUpdateEnabled, getFilteredJobs, getRecentJobs]);\r\n\r\n  // methods\r\n  const refreshJobs = () => {\r\n    getRecentJobs();\r\n    getFilteredJobs(\"all\", \"all\");\r\n  }\r\n\r\n  const enableAutoUpdateHandler = () => {\r\n    setAutoUpdateEnabled(true);\r\n  };\r\n\r\n  const disableAutoUpdateHandler = () => {\r\n    setAutoUpdateEnabled(false);\r\n  };\r\n\r\n  const locationChangeHandler = (e) => {\r\n    setLocation(e.target.value);\r\n  };\r\n\r\n  const titleChangeHandler = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const fetchFilteredJobsNonContext = () => {\r\n    fetchFilteredJobs(location, title);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes[\"job-search-reuslt-page-container\"]}>\r\n        <div className={classes[\"job-search-result-container\"]}>\r\n          <br />\r\n          <div className={classes[\"job-search-container\"]}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"no-border-right\"\r\n              placeholder=\"Location\"\r\n              value={location}\r\n              onChange={locationChangeHandler}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"no-border-right no-border-left\"\r\n              placeholder=\"Role Title\"\r\n              value={title}\r\n              onChange={titleChangeHandler}\r\n            />\r\n            <Button\r\n              class=\"mini no-border-left\"\r\n              onClick={fetchFilteredJobsNonContext}\r\n            >\r\n              Update Search\r\n            </Button>\r\n          </div>\r\n          <br />\r\n          <div className=\"update-data-buttons\">\r\n            <Button class=\"mini margin-right-class\" onClick={refreshJobs}>\r\n              New jobs may be available. Refresh?\r\n            </Button>\r\n            {autoUpdateEnabled && (\r\n              <Button\r\n                class=\"mini margin-left-class danger\"\r\n                onClick={disableAutoUpdateHandler}\r\n              >\r\n                Disable auto update recent jobs\r\n              </Button>\r\n            )}\r\n            {!autoUpdateEnabled && (\r\n              <Button\r\n                class=\"mini hot margin-left-class\"\r\n                onClick={enableAutoUpdateHandler}\r\n              >\r\n                Enable auto update jobs\r\n              </Button>\r\n            )}\r\n            <br />\r\n            <br />\r\n          </div>\r\n          <FilteredJobItems onOpenApplicationFormModal={props.onClickApply} />\r\n          <br />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobSearchResult;\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC5ngyuu00h7PmL4xdW30BWQ_-bHHzV4J4\",\r\n  authDomain: \"job-search-light.firebaseapp.com\",\r\n  projectId: \"job-search-light\",\r\n  storageBucket: \"job-search-light.appspot.com\",\r\n  messagingSenderId: \"1067921060745\",\r\n  appId: \"1:1067921060745:web:13012f2288b2ab46fd2758\",\r\n  measurementId: \"G-F4NJSWX83D\"\r\n};\r\n\r\n// initialize firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport AuthContext from \"../../../context/AuthContext\";\r\nimport Button from \"../../layout/Button/Button\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport firebase from \"../../../util/firebase\";\r\nimport classes from \"./Profile.module.scss\";\r\n\r\nconst Profile = () => {\r\n  // context\r\n  const { loggedInUser, getUserDetails, userDetails } = useContext(AuthContext);\r\n\r\n  // states\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [cv, setCv] = useState(\"\");\r\n  const [coverLetter, setCoverLetter] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [urls, setUrls] = useState(\"\");\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n  const [isStatusSuccessful, setIsStatusSuccessful] = useState(false);\r\n\r\n  const [uploadStatusMessage, setUploadStatusMessage] = useState(\"\");\r\n  const [isUploadStatusSuccessful, setIsUploadStatusSuccessful] =\r\n    useState(undefined);\r\n\r\n  useEffect(() => {\r\n    getUserDetails(loggedInUser);\r\n  }, []);\r\n\r\n  const clearUploadStatus = () => {\r\n    setUploadStatusMessage(\"\");\r\n    setIsUploadStatusSuccessful(undefined);\r\n  };\r\n\r\n  const nicknameChangeHandler = (e) => {\r\n    setNickname(e.target.value);\r\n    // setPasswordIsValid(email.includes(\"@\") && e.target.value.trim().length > 6);\r\n  };\r\n\r\n  const cvChangeHandler = async (e) => {\r\n    clearUploadStatus();\r\n    setUploadStatusMessage(\"Uploading CV...\");\r\n    const file = e.target.files[0];\r\n    const id = uuid();\r\n    const cvFilesRef = firebase.storage().ref(\"files\").child(id);\r\n    await cvFilesRef.put(file);\r\n    cvFilesRef\r\n      .getDownloadURL()\r\n      .then((url) => {\r\n        setCv(url);\r\n        setIsUploadStatusSuccessful(true);\r\n        setUploadStatusMessage(`Successfully uploaded CV`);\r\n      })\r\n      .catch((err) => {\r\n        setIsUploadStatusSuccessful(false);\r\n        setUploadStatusMessage(`${err}`);\r\n      });\r\n  };\r\n\r\n  const coverLetterChangeHandler = (e) => {\r\n    setCoverLetter(e.target.value);\r\n  };\r\n\r\n  const locationChangeHandler = (e) => {\r\n    setLocation(e.target.value);\r\n  };\r\n\r\n  const urlsChangeHandler = (e) => {\r\n    setUrls(e.target.value);\r\n  };\r\n\r\n  const submitProfilePatchHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let name;\r\n    nickname ? (name = nickname) : (name = loggedInUser);\r\n    const applicant = loggedInUser;\r\n\r\n    try {\r\n      const profile = {\r\n        name,\r\n        applicant,\r\n        cv,\r\n        coverLetter,\r\n        location,\r\n        urls,\r\n      };\r\n\r\n      await axios.put(\r\n        // `http://localhost:5000/authenticate/users/${loggedInUser}`,\r\n        `https://job-search-context.herokuapp.com/authenticate/users/${loggedInUser}`,\r\n        profile\r\n      );\r\n\r\n      setIsStatusSuccessful(true);\r\n      setStatusMessage(\"Successfully updated profile\");\r\n    } catch (error) {\r\n      setIsStatusSuccessful(false);\r\n      setStatusMessage(\r\n        \"Failed to update profile, please make sure you have filled all required fields\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex-box-container\">\r\n        <div className={classes[\"profile-set-up-container\"]}>\r\n          <div className=\"form-container profile-setu-up\">\r\n            <div className=\"titles-container\">\r\n              <h1>Set Up and Update Profile</h1>\r\n              <p>\r\n                Hi there, <span className=\"hot\">{loggedInUser}</span>.\r\n                <br />\r\n                Would you like to set up a profile for easier applications?\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"form-container\">\r\n              <form onSubmit={(e) => e.preventDefault()}>\r\n                <label htmlFor=\"use-nickname\">Use a nickname?</label>\r\n                <input\r\n                  id=\"use-nickname\"\r\n                  type=\"text\"\r\n                  placeholder=\"Ibbi\"\r\n                  value={userDetails ? userDetails.email : nickname}\r\n                  onChange={nicknameChangeHandler}\r\n                />\r\n                <br />\r\n\r\n                <label htmlFor=\"upload-cv\">\r\n                  CV <span className=\"hot\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"upload-cv\"\r\n                  type=\"file\"\r\n                  accept=\".pdf,.doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n                  className=\"no-resize\"\r\n                  onChange={cvChangeHandler}\r\n                />\r\n                <br />\r\n                <br />\r\n\r\n                <label htmlFor=\"cover-letter\">Cover Letter</label>\r\n                <textarea\r\n                  id=\"cover-letter\"\r\n                  type=\"text\"\r\n                  className=\"no-resize\"\r\n                  onChange={coverLetterChangeHandler}\r\n                  value={\r\n                    userDetails && userDetails.profile\r\n                      ? userDetails.profile[0].coverLetter\r\n                      : coverLetter\r\n                  }\r\n                />\r\n                <br />\r\n                <br />\r\n\r\n                <label htmlFor=\"location\">\r\n                  Location <span className=\"hot\">*</span>\r\n                </label>\r\n                <input\r\n                  id=\"location\"\r\n                  type=\"text\"\r\n                  className=\"no-resize\"\r\n                  placeholder=\"Manchester\"\r\n                  onChange={locationChangeHandler}\r\n                  value={\r\n                    userDetails && userDetails.profile\r\n                      ? userDetails.profile[0].location\r\n                      : location\r\n                  }\r\n                />\r\n                <br />\r\n                <br />\r\n\r\n                <label htmlFor=\"third-party-urls\">Third Party URLs</label>\r\n                <input\r\n                  id=\"third-party-urls\"\r\n                  type=\"text\"\r\n                  className=\"no-resize\"\r\n                  placeholder=\"https://github.com/mygithubprofile\"\r\n                  onChange={urlsChangeHandler}\r\n                  value={\r\n                    userDetails && userDetails.profile\r\n                      ? userDetails.profile[0].urls\r\n                      : urls\r\n                  }\r\n                />\r\n                <br />\r\n                <br />\r\n\r\n                <Button onClick={submitProfilePatchHandler}>\r\n                  Update my profile\r\n                </Button>\r\n                <br />\r\n\r\n                <div className=\"file-upload status-message-container\">\r\n                  {isUploadStatusSuccessful === true && uploadStatusMessage && (\r\n                    <p className=\"file-upload status-message success\">\r\n                      {uploadStatusMessage}\r\n                    </p>\r\n                  )}\r\n                  {isUploadStatusSuccessful === undefined &&\r\n                    uploadStatusMessage && (\r\n                      <p className=\"file-upload status-message pending\">\r\n                        {uploadStatusMessage}\r\n                      </p>\r\n                    )}\r\n                  {isUploadStatusSuccessful === false &&\r\n                    uploadStatusMessage && (\r\n                      <p className=\"file-upload status-message success\">\r\n                        {uploadStatusMessage}\r\n                      </p>\r\n                    )}\r\n                </div>\r\n                <div className=\"status-message-container\">\r\n                  {isStatusSuccessful === true && statusMessage && (\r\n                    <p className=\"status-message success\">{statusMessage}</p>\r\n                  )}\r\n                  {isStatusSuccessful === false && statusMessage && (\r\n                    <p className=\"status-message error\">{statusMessage}</p>\r\n                  )}\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useContext } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Login from \"./components/auth/Login/Login\";\r\nimport Register from \"./components/auth/Register/Register\";\r\nimport AuthContext from \"./context/AuthContext\";\r\nimport LandingPage from \"./components/pages/LandingPage/LandingPage\";\r\nimport Navbar from \"./components/layout/Navbar/Navbar\";\r\nimport About from \"./components/pages/About/About\";\r\nimport AvailableJobs from \"./components/pages/MyJobs/MyJobs\";\r\nimport AdvertiseJobs from \"./components/pages/AdvertiseJobs/AdvertiseJobs\";\r\nimport JobSearchResult from \"./components/pages/JobSearchResult/JobSearchResult\";\r\nimport Profile from \"./components/pages/Profile/Profile\";\r\n\r\nconst Router = (props) => {\r\n  const { loggedIn } = useContext(AuthContext);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"disclaimer-container\">\r\n        <p>\r\n          Sorry, responsiveness for smaller devices is only available on the\r\n          Redux version of this website\r\n        </p>\r\n      </div>\r\n      <div className=\"router-container\">\r\n        <Navbar />\r\n        <Switch>\r\n          {loggedIn === false && (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <About />\r\n              </Route>\r\n              <Route path=\"/register\">\r\n                <Register />\r\n              </Route>\r\n              <Route path=\"/login\">\r\n                <div>\r\n                  <Login\r\n                    onClickForgotPassword={props.onOpenForgotPasswordModal}\r\n                  />\r\n                </div>\r\n              </Route>\r\n            </>\r\n          )}\r\n          {loggedIn === true && (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <LandingPage />\r\n              </Route>\r\n              <Route path=\"/search-jobs\">\r\n                <LandingPage />\r\n              </Route>\r\n              <Route path=\"/job-search-result\">\r\n                <JobSearchResult\r\n                  onClickApply={props.onOpenApplicationFormModal}\r\n                />\r\n              </Route>\r\n              <Route path=\"/advertise-jobs\">\r\n                <AdvertiseJobs />\r\n              </Route>\r\n              <Route path=\"/my-jobs\">\r\n                <AvailableJobs />\r\n              </Route>\r\n              <Route path=\"/profile\">\r\n                <Profile />\r\n              </Route>\r\n            </>\r\n          )}\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React, { useContext } from \"react\";\r\nimport AuthContext from \"../../../context/AuthContext\";\r\nimport Button from \"../../layout/Button/Button\";\r\nimport Modal from \"../../layout/Modal/Modal\";\r\nimport classes from \"./ForgottenPassword.module.scss\";\r\n\r\nconst ForgottenPassword = (props) => {\r\n  // context\r\n  const { hideModal } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Modal>\r\n      <div className=\"form-container\">\r\n        <strong>\r\n          <h1>Password Reset</h1>\r\n        </strong>\r\n        <p>\r\n          To reset your password, enter the email address you use to sign in to\r\n          Buzzra\r\n        </p>\r\n        <form onSubmit={(e) => e.preventDefault()}>\r\n          <label htmlFor=\"email-address\">Email Address</label>\r\n          <input type=\"email\" />\r\n          <Button>Send Reset Instructions</Button>\r\n          <Button class=\"secondary\" onClick={hideModal}>\r\n            Go Back\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ForgottenPassword;\r\n","import React, { useState, useContext } from \"react\";\r\nimport AuthContext from \"../../../context/AuthContext\";\r\nimport Button from \"../../layout/Button/Button\";\r\nimport Modal from \"../../layout/Modal/Modal\";\r\nimport classes from \"./ApplicationForm.module.scss\";\r\nimport axios from \"axios\";\r\nimport firebase from \"../../../../src/util/firebase\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst ApplicationForm = (props) => {\r\n  // context variables\r\n  const { selectedJob } = useContext(AuthContext);\r\n  const { loggedInUser } = useContext(AuthContext);\r\n  const { getAdvertisedAndAppliedToJobs } = useContext(AuthContext);\r\n\r\n  // states\r\n  const [nickname, setNickname] = useState();\r\n  const [cv, setCv] = useState();\r\n  const [coverLetter, setCoverLetter] = useState();\r\n  const [location, setLocation] = useState();\r\n  const [urls, setUrls] = useState();\r\n\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n  const [isStatusSuccessful, setIsStatusSuccessful] = useState(false);\r\n\r\n  const [uploadStatusMessage, setUploadStatusMessage] = useState(\"\");\r\n  const [isUploadStatusSuccessful, setIsUploadStatusSuccessful] =\r\n    useState(undefined);\r\n\r\n  // methods\r\n  const nicknameChangeHandler = (e) => {\r\n    setNickname(e.target.value);\r\n    // setPasswordIsValid(email.includes(\"@\") && e.target.value.trim().length > 6);\r\n  };\r\n\r\n  const clearUploadStatus = () => {\r\n    setUploadStatusMessage(\"\");\r\n    setIsUploadStatusSuccessful(undefined);\r\n  };\r\n\r\n  const cvChangeHandler = async (e) => {\r\n    clearUploadStatus();\r\n    setUploadStatusMessage(\"Uploading CV...\");\r\n    const file = e.target.files[0];\r\n    const id = uuid();\r\n    const cvFilesRef = firebase.storage().ref(\"files\").child(id);\r\n    await cvFilesRef.put(file);\r\n    cvFilesRef\r\n      .getDownloadURL()\r\n      .then((url) => {\r\n        setCv(url);\r\n        setIsUploadStatusSuccessful(true);\r\n        setUploadStatusMessage(`Successfully uploaded CV`);\r\n      })\r\n      .catch((err) => {\r\n        setIsUploadStatusSuccessful(false);\r\n        setUploadStatusMessage(`${err}`);\r\n      });\r\n  };\r\n\r\n  const coverLetterChangeHandler = (e) => {\r\n    setCoverLetter(e.target.value);\r\n  };\r\n\r\n  const locationChangeHandler = (e) => {\r\n    setLocation(e.target.value);\r\n  };\r\n\r\n  const urlsChangeHandler = (e) => {\r\n    setUrls(e.target.value);\r\n  };\r\n\r\n  const submitJobApplicationHandler = async (e) => {\r\n    e.preventDefault();\r\n    const jobReference = selectedJob._id;\r\n\r\n    let name;\r\n    nickname ? (name = nickname) : (name = loggedInUser);\r\n    const applicant = loggedInUser;\r\n\r\n    try {\r\n      const applicationFormData = {\r\n        name,\r\n        applicant,\r\n        cv,\r\n        coverLetter,\r\n        location,\r\n        urls,\r\n        jobReference,\r\n      };\r\n\r\n      await axios.post(\r\n        // `http://localhost:5000/job-application/${loggedInUser}`,\r\n        `https://job-search-context.herokuapp.com/job-application/${loggedInUser}`,\r\n        applicationFormData\r\n      );\r\n\r\n      // update my jobs data relevant to my-jobs route\r\n      getAdvertisedAndAppliedToJobs(loggedInUser);\r\n      setIsStatusSuccessful(true);\r\n      setStatusMessage(\r\n        \"Successfully submitted application, you may close this form\"\r\n      );\r\n    } catch (error) {\r\n      setIsStatusSuccessful(false);\r\n      setStatusMessage(\r\n        \"Failed to apply, please make sure you have filled all required fields\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal onClose={props.onCloseApplicationFormModal}>\r\n      <div className=\"form-container\">\r\n        <strong>\r\n          <h1>\r\n            Application Form for a {selectedJob.title} at {selectedJob.company}\r\n          </h1>\r\n          <p>\r\n            Since you don't have a profile set up, <br />\r\n            please fill in some of the optional fields and all the required{\" \"}\r\n            <span className=\"hot\">*</span>\r\n          </p>\r\n        </strong>\r\n        <p></p>\r\n        <form onSubmit={(e) => e.preventDefault()}>\r\n          <label htmlFor=\"use-nickname\" value={nickname}>\r\n            Use a nickname?\r\n          </label>\r\n          <input\r\n            id=\"use-nickname\"\r\n            type=\"text\"\r\n            placeholder=\"Ibbi\"\r\n            value={nickname}\r\n            onChange={nicknameChangeHandler}\r\n          />\r\n          <br />\r\n\r\n          <label htmlFor=\"upload-cv\">\r\n            CV <span className=\"hot\">*</span>\r\n          </label>\r\n          <input\r\n            id=\"upload-cv\"\r\n            type=\"file\"\r\n            accept=\".pdf,.doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n            className=\"no-resize\"\r\n            onChange={cvChangeHandler}\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <label htmlFor=\"cover-letter\">Cover Letter</label>\r\n          <textarea\r\n            id=\"cover-letter\"\r\n            type=\"text\"\r\n            className=\"no-resize\"\r\n            value={coverLetter}\r\n            onChange={coverLetterChangeHandler}\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <label htmlFor=\"location\">\r\n            Location <span className=\"hot\">*</span>\r\n          </label>\r\n          <input\r\n            id=\"location\"\r\n            type=\"text\"\r\n            className=\"no-resize\"\r\n            placeholder=\"Manchester\"\r\n            value={location}\r\n            onChange={locationChangeHandler}\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <label htmlFor=\"third-party-urls\">Third Party URLs</label>\r\n          <input\r\n            id=\"third-party-urls\"\r\n            type=\"text\"\r\n            className=\"no-resize\"\r\n            placeholder=\"https://github.com/mygithubprofile\"\r\n            value={urls}\r\n            onChange={urlsChangeHandler}\r\n          />\r\n          <br />\r\n          <br />\r\n\r\n          <Button onClick={submitJobApplicationHandler}>\r\n            Submit Application\r\n          </Button>\r\n          <br />\r\n          <Button class=\"secondary\" onClick={props.onCloseApplicationFormModal}>\r\n            Go Back\r\n          </Button>\r\n\r\n          <div className=\"file-upload status-message-container\">\r\n            {isUploadStatusSuccessful === true && uploadStatusMessage && (\r\n              <p className=\"file-upload status-message success\">\r\n                {uploadStatusMessage}\r\n              </p>\r\n            )}\r\n            {isUploadStatusSuccessful === undefined && uploadStatusMessage && (\r\n              <p className=\"file-upload status-message pending\">{uploadStatusMessage}</p>\r\n            )}\r\n            {isUploadStatusSuccessful === false && uploadStatusMessage && (\r\n              <p className=\"file-upload status-message success\">\r\n                {uploadStatusMessage}\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"status-message-container\">\r\n            {isStatusSuccessful === true && statusMessage && (\r\n              <p className=\"status-message success\">{statusMessage}</p>\r\n            )}\r\n            {isStatusSuccessful === false && statusMessage && (\r\n              <p className=\"status-message error\">{statusMessage}</p>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ApplicationForm;\r\n","import React, { useState, useContext } from \"react\";\nimport Router from \"./Router\";\nimport axios from \"axios\";\nimport { AuthContextProvider } from \"./context/AuthContext\";\nimport \"./assets/global.scss\";\nimport ForgottenPassword from \"./components/auth/ForgottenPassword/ForgottenPassword\";\nimport ApplicationForm from \"./components/pages/ApplicationForm/ApplicationForm\";\n\naxios.defaults.withCredentials = true;\n\nfunction App() {\n  const [forgottenPasswordIsShown, setForgottenPasswordIsShown] =\n    useState(false);\n  const [applicationFormIsShwon, setApplicationFormIsShwon] = useState(false);\n\n  const showForgottenPasswordHandler = () => {\n    setForgottenPasswordIsShown(true);\n  };\n\n  const hideForgottenPasswordHandler = () => {\n    setForgottenPasswordIsShown(false);\n  };\n\n  const showApplicationFormHandler = () => {\n    setApplicationFormIsShwon(true);\n  };\n\n  const hideApplicationFormHandler = () => {\n    setApplicationFormIsShwon(false);\n  };\n\n  return (\n    <>\n      <AuthContextProvider>\n        {forgottenPasswordIsShown && (\n          <ForgottenPassword\n            onCloseForgotPasswordModal={hideForgottenPasswordHandler}\n          />\n        )}\n        {applicationFormIsShwon && (\n          <ApplicationForm\n            onCloseApplicationFormModal={hideApplicationFormHandler}\n          />\n        )}\n        <Router\n          onOpenForgotPasswordModal={showForgottenPasswordHandler}\n          onOpenApplicationFormModal={showApplicationFormHandler}\n        />\n      </AuthContextProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"job-item-container\":\"FilteredJobItems_job-item-container__2wNY1\",\"job-item\":\"FilteredJobItems_job-item__3qdpZ\",\"icon\":\"FilteredJobItems_icon__3LnnW\",\"salary-location\":\"FilteredJobItems_salary-location__3eNGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register-container\":\"Register_register-container__1CMvM\",\"welcome-message-container\":\"Register_welcome-message-container__z5M2m\",\"image-container\":\"Register_image-container___EVrb\",\"control\":\"Register_control__1_6Dc\",\"invalid\":\"Register_invalid__2yafg\",\"logo\":\"Register_logo__OFFza\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"job-item-container\":\"MyJobs_job-item-container__3wa-m\",\"applied\":\"MyJobs_applied__3r40-\",\"job-item\":\"MyJobs_job-item__LRNea\",\"icon\":\"MyJobs_icon__1Jae0\",\"salary-location\":\"MyJobs_salary-location__3-wK1\",\"flex-box-container\":\"MyJobs_flex-box-container__15n1X\",\"my-jobs-container\":\"MyJobs_my-jobs-container__1KyCT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-container\":\"Login_login-container__2FwvN\",\"control\":\"Login_control__1_jMm\",\"invalid\":\"Login_invalid__3Jyw6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"job-search-reuslt-page-container\":\"JobSearchResult_job-search-reuslt-page-container__2qzbH\",\"job-search-container\":\"JobSearchResult_job-search-container__2yI5A\",\"job-search-result-container\":\"JobSearchResult_job-search-result-container__1ZrSe\",\"flex-box-container\":\"JobSearchResult_flex-box-container__3LhhC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__14bin\",\"modal\":\"Modal_modal__37QWl\",\"slide-down\":\"Modal_slide-down__W2RKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landing-page-container\":\"LandingPage_landing-page-container__2So_g\",\"job-search-container\":\"LandingPage_job-search-container__-X0-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about-page-container\":\"About_about-page-container__1c6G7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"advertise-jobs-container\":\"AdvertiseJobs_advertise-jobs-container__1ELr0\",\"job-search-container\":\"AdvertiseJobs_job-search-container__3UOrC\",\"control\":\"AdvertiseJobs_control__11smb\",\"invalid\":\"AdvertiseJobs_invalid__hHaSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-set-up-container\":\"Profile_profile-set-up-container__1-vJd\",\"control\":\"Profile_control__WRxj8\",\"invalid\":\"Profile_invalid__1plhs\"};"],"sourceRoot":""}